[var callable_one [lambda [] [block
   [var a 10]
   [var b 100]
   [yield [+ a b]]   ; Execution of this lambda should cease before [a]
   [assert "yield.saur > callable_one > Lambda failed to yield processing post-yiled command" [== 1 0]]
]]]

[var callable_two [lambda [] [block

   [var inner_callable [lambda [] [block
      [yield 33]
      [assert "yield.saur > inner_callable > Lambda failed to yield processing post-yiled command" [== 1 0]]
   ]]]

   [var result [inner_callable]]
   [assert "yield.saur > inner_callable > failed to provide proper response" [== 33 result]]

   [+ result 7]
]]]

[assert "yield.saur > callable_one failed to provide proper response" [== 110 [callable_one]]]
[assert "yield.saur > callable_two failed to provide proper response" [== 40 [callable_two]]]

[var callable_three [lambda [data] [block
   [if [== 0 data] [yield 1]]
   [if [== 1 data] [yield 0]]
   [yield -1]
]]]

[assert "yield.saur > callable_three failed to provide proper response" [== 1 [callable_three 0]]]
[assert "yield.saur > callable_three failed to provide proper response" [== 0 [callable_three 1]]]
[assert "yield.saur > callable_three failed to provide proper response" [== -1 [callable_three 2]]]

[var callable_four [lambda [items target] [block
   [iter x items [block
      [if [== target x] [yield 1]]
   ]]
   [yield -1]
]]]

[assert "yield.saur > callable_four failed to provide proper response" [==  1 [callable_four [list 1 2 3 4 5 6 7] 5]]]
[assert "yield.saur > callable_four failed to provide proper response" [==  1 [callable_four [list 1 2 3 4 5 6 7] 3]]]
[assert "yield.saur > callable_four failed to provide proper response" [== -1 [callable_four [list 1 2 3 4 5 6 7] 9]]]

[var callable_five [lambda [items target] [block
   [var five_inner [lambda [items target] [block
      [iter x items [block
         [if [== target x] [yield 1]]
      ]]
      [yield -1]
   ]]]
   [yield [five_inner items target]]
   [assert "an unfortunate accident" [== 1 0]]
]]]

[assert "yield.saur > callable_four failed to provide proper response" [==  1 [callable_five [list 1 2 3 4 5 6 7] 5]]]
[assert "yield.saur > callable_four failed to provide proper response" [==  1 [callable_five [list 1 2 3 4 5 6 7] 3]]]
[assert "yield.saur > callable_four failed to provide proper response" [== -1 [callable_five [list 1 2 3 4 5 6 7] 9]]]