;  Author: bosley
;  About:  Signal interface

; Signal list
[var hup 1]     ; Hangup
[var int 2]     ; Interrupt process
[var quit 3]    ; Quit process
[var ill 4]     ; Illegal instruction
[var trap 5]    ; Trace trap
[var abrt 6]    ; Abort

;  Set handler for all signals
;   target_fn : The lambda to call when a signal is received
;                   - params: int (signal received)
[var set_handler_all [lambda [target_fn] [block 
    [assert "signal pkg > target_fn must be of type lambda" [seq "lambda" [type target_fn]]]
    [signal._pkg_set_signal_handler_all_ target_fn]
]]]

;  Set handler for specific signal
;   sig_num : The specific signal to handle
;   target_fn : The lambda to call when a signal is received
;                   - params: int (signal received)
[var set_handler [lambda [sig_num target_fn] [block 
    [assert "signal pkg > sig_num must be of type integer" [seq "integer" [type sig_num]]]
    [assert "signal pkg > sig_num must be a valid integer (1-6)" [and [>= sig_num 1] [<= sig_num 6]]]
    [assert "signal pkg > target_fn must be of type lambda" [seq "lambda" [type target_fn]]]
    [signal._pkg_set_signal_handler_ sig_num target_fn]
]]]
