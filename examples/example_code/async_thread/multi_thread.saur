;   This program starts two threads that talk to eachother
;   with one thread sending, and another receiving
;   while the main thread waits

[use "os"]

[var receiver_lambda [lambda [channel] [block
    [loop [var counter 0] [< counter 30] [set counter [+ counter 1]] [block
        [if [channel.has_data] [block
            [var data [channel.get]]
            [putln "Got: " data]
            [set data [- data 1]]
        ]]
        [os.sleep_ms 1000]
    ]]
    [putln "broke out of threaded receiver"]
]]]

[var sender_lambda [lambda [channel] [block
    [loop [var idx 0] [< idx 10] [set idx [+ idx 1]] [block
        [os.sleep_ms 5000]
        [channel.put idx]
        [if [== idx 5] [break]]
    ]]
    [putln "broke out of threaded sender"]
]]]

[chan my_channel]

[thread receiver_handle [receiver_lambda my_channel]]
[thread sender_handle [sender_lambda my_channel]]

[sender_handle.join]
[receiver_handle.join]